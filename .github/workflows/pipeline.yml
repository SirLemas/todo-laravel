name: Enviar alterações para branch MAIN
on:
  push:
    branches:
      - pipeline
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{secrets.DB_PASSWORD_ROOT}}
          MYSQL_DATABASE: ${{secrets.DB_DATABASE}}
          MYSQL_USER: ${{secrets.USER}}
          MYSQL_PASSWORD: ${{secrets.DB_PASSWORD}}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3307:3306
    steps:
    - uses: actions/checkout@v2

    - name: Instalando o docker compose para subir os serviços
      run: sudo apt-get install -y docker-compose

    - name: Buildando e subindo os containers
      run: docker-compose up -d --build

    - name: Instalando as dependências do composer
      run: docker-compose exec php composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Copiando o .env.example para .env dentro do container
      run: docker-compose exec php cp .env.example .env

    - name: Gerando o app_key
      run: docker-compose exec php php artisan key:generate

    - name: Configure Laravel .env
      run: |
        docker-compose exec php sed -i 's/DB_HOST=127.0.0.1/DB_HOST=db/' .env
        docker-compose exec php sed -i 's/DB_DATABASE=laravel/DB_DATABASE=${{ secrets.DB_DATABASE }}/' .env
        docker-compose exec php sed -i 's/DB_USERNAME=root/DB_USERNAME=${{ secrets.USER }}/' .env
        docker-compose exec php sed -i 's/DB_PASSWORD=/DB_PASSWORD=${{ secrets.PASSWORD }}/' .env

    - name: Rodando as migrations
      run: docker-compose exec php php artisan migrate --force

    - name: Executando os testes do laravel
      run: docker-compose exec php php artisan test

    - name: Derrubando o docker-compose
      if: always()
      run: docker-compose down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - run: echo "Inicia deploy para produção ..."
      
      - name: Liberando acesso ao repositório
        run: actions/checkout@v4

      - name: Configura o git
        run: |
          git config --global user.name "${{secrets.GH_NAME}}"
          git config --global user.email "${{secrets.GH_EMAIL}}"

      - name: Baixa branches novas no projeto
        run: git fetch

      # - name: Cria uma branch local chamada pipeline
      #   run: git checkout -b pipeline
      - name: Dar checkout para a branch master
        run: git checkout master

      - name: Realiza merge com a pipeline
        run: git merge origin pipeline

      # - name: Força atualizações para pipeline
      #   run: git push --force origin pipeline

      - name: Subindo alterações para a master
        run: git push origin mater

    
